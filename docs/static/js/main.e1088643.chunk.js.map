{"version":3,"sources":["components/Header.js","components/Sidebar.js","components/component-overview/Overview.js","components/component-list/UserFilter.js","components/component-list/TableSessionList.js","components/component-list/Pagination.js","components/component-list/SessionList.js","services/SessionsService.js","components/component-charts/TableCharts.js","components/component-charts/ChartsUsage.js","services/GroupsService.js","services/ChartsService.js","App.js","index.js"],"names":["Header","onClick","this","props","react_default","a","createElement","Fragment","className","type","Component","Sidebar","hiddenButton","hiddenClass","visibility","concat","Link","to","Overview","UserFilter","_this$props","getQueryUsername","resultsNumber","htmlFor","id","placeholder","name","onKeyUp","TableSessionList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","row","mapResults","bind","assertThisInitialized","list","_this2","renderTime","map","item","index","key","user__username","min_timestamp","renderDuration","duration_sec","request_count","duration","seconds","parseInt","totalMins","mins","hours","sessionsList","orderResultsUsername","orderResultsTimeStarted","orderResultsDuration","orderResultsRequestCount","data-arrow","Proptypes","PropTypes","func","isRequired","array","Pagination","context","currentPage","pageCount","pageSize","controls","matrixControls","handleSelect","createButtons","getButtons","setCurrentPage","page","arrayBtns","arrayPage","filter","arr","indexOf","length","setState","createControls","i","push","slice","e","_this3","option","currentTarget","value","num","upperLimit","dataSlice","_this4","_this$state","arIni","arEnd","react","onChange","component_list_TableSessionList","children","element","SessionList","userData","activePetition","queryUsername","duplicatedArray","fetchSessions","fetch","then","response","json","data","sessions","resultsDate","calculateResultsNumber","calculateFromToDate","fromDateToDate","from_date","to_date","par","timestamp","sessionStart","Date","getFullYear","addZero","getMonth","toString","getDate","getHours","getMinutes","userName","includes","filteredList","filterUserame","orderedList","orderUsername","reverse","orderTimeStarted","orderDuration","orderRequestCount","refs","child","sort","b","nameA","toUpperCase","nameB","sortedList","getAttribute","_this5","_this6","_this7","component_list_UserFilter","component_list_Pagination","ref","TableCharts","table","chartList","reduce","acc","matrixIndex","findIndex","chart","details","chart_name","accMatrix","request","splice","matrix","chartNames","toFixed","style","width","ChartsUsage","allGroupsList","groupsList","filterOptionsChecked","timelapse","display","fromDate","toDate","handleOptions","handleChangeDate","handleDateFrom","handleDateTo","visibilitySetDate","handleUserGroups","selectAllGroups","clearAllGroups","filterAll","fetchGroups","renderUserGroups","fetchCharts","groups","check","prevState","userGroupsInputs","defaultChecked","groupData","getGroups","allGroups","startDate","endDate","setDate","toISOString","open_chart_events","optionsTarget","checked","persist","period","ct","fd","setMonth","Math","round","_this8","userGroupsTarget","_this9","originalCharts","supportChecked","removedGroups","isGroupPresent","group","user__group__name","isPresent","ii","hiddenClassSetDate","_this10","_this11","component_charts_TableCharts","data-select","App","handleClick","hiddenStatus","components_Header","components_Sidebar","Switch","Route","exact","path","render","component_overview_Overview","component_list_SessionList","component_charts_ChartsUsage","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1088643.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Header extends Component {\n\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <header className=\"app__header\">\n          <div className=\"button__container\">\n            <div className=\"div__btn btn\" type=\"button\" onClick={onClick}>\n              <i className=\"zmdi zmdi-menu\"></i>\n            </div>\n          </div>\n          <h1 className=\"app__header-title\"><span className=\"span-style\">Style</span><span className=\"span-sage\">Sage</span></h1>\n        </header>\n      </React.Fragment>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\n\n\nclass Sidebar extends Component {\n\n  visibility() {\n    const { hiddenButton } = this.props;\n\n    const hiddenClass = (hiddenButton === true) ? 'hidden' : '';\n    return hiddenClass;\n  }\n\n  render() {\n    const hiddenClass = this.visibility();\n\n    return (\n      <aside className={`app__aside ${hiddenClass}`}>\n        <div className=\"app__aside-header\">\n          <i className=\"zmdi zmdi-chart\"></i>\n          <p className=\"app__aside-title\">User analytics</p>\n        </div>\n        <ul className=\"aside__list\">\n          <li className=\"aside__item\">\n            <Link to=\"/\" className=\"aside__item-link\">Overview</Link>\n          </li>\n          <li className=\"aside__item\">\n            <Link to=\"/session-list\" className=\"aside__item-link\">Session List</Link>\n          </li>\n          <li className=\"aside__item\">\n            <Link to=\"/charts-usage\" className=\"aside__item-link\">Charts Usage</Link>\n          </li>\n        </ul>\n      </aside>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  hiddenButton: PropTypes.bool.isRequired\n}\n\nexport default Sidebar;\n","import React, {Component} from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass Overview extends Component {\n\n  visibility() {\n    const { hiddenButton } = this.props;\n    const displace = (hiddenButton === true) ? '' : 'displace';\n    return displace;\n  }\n  render() {\n    return (\n        <section className={`app__overview ${this.visibility()}`}>\n          <div className=\"overview__title\">\n            <h2>Welcome to Platform User Analytics</h2>\n          </div>\n          <div className=\"overview__buttons\">\n          <Link to=\"/session-list\" className=\"aside__item-link\">\n            <div type=\"button\" className=\"frame-btn frame-btn-left\">\n              <h3 className=\"aside__item-title\">Session List</h3>\n              <p className=\"aside__item-text\">View information on user sessions,including request count and length of stay.</p>\n              <span className=\"frame-btn__outline frame-btn__outline--tall\">\n                  <span className=\"frame-btn__line frame-btn__line--tall\"></span>\n                  <span className=\"frame-btn__line frame-btn__line--flat\"></span>\n              </span>\n              <span className=\"frame-btn__outline frame-btn__outline--flat\">\n                  <span className=\"frame-btn__line frame-btn__line--tall\"></span>\n                  <span className=\"frame-btn__line frame-btn__line--flat\"></span>\n              </span>\n              <span className=\"frame-btn__solid\"></span>\n              <span className=\"frame-btn__text\"></span>\n            </div>\n          </Link>\n          <Link to=\"/charts-usage\" className=\"aside__item-link\">\n            <div type=\"button\" className=\"frame-btn\">\n             <h3 className=\"aside__item-title\">Chart Usage</h3>\n              <p className=\"aside__item-text\">View information on chart visualization, including use of charts by groups and date.</p>\n              <span className=\"frame-btn__outline frame-btn__outline--tall\">\n                <span className=\"frame-btn__line frame-btn__line--tall\"></span>\n                <span className=\"frame-btn__line frame-btn__line--flat\"></span>\n                  </span>\n                <span className=\"frame-btn__outline frame-btn__outline--flat\">\n                    <span className=\"frame-btn__line frame-btn__line--tall\"></span>\n                    <span className=\"frame-btn__line frame-btn__line--flat\"></span>\n                </span>\n                <span className=\"frame-btn__solid\"></span>\n                <span className=\"frame-btn__text\"></span>\n            </div>\n          </Link>\n          </div>\n        </section>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass UserFilter extends Component {\n  render() {\n    const { getQueryUsername, resultsNumber } = this.props;\n\n    return (\n      <div className=\"search__container\">\n        <div className=\"search__input-container\">\n          <label htmlFor=\"username\">\n            <span className=\"icon__search\"> <i className=\"zmdi zmdi-search\"></i></span>\n            <input type=\"text\" id=\"username\" className=\"search__input\" placeholder=\"search\" name=\"username\" onKeyUp={getQueryUsername} />\n         </label>\n        </div>\n        <p className=\"search__info-total\">Showing {resultsNumber} entries</p>\n      </div>\n    );\n  }\n}\n\nUserFilter.propTypes = {\n  getQueryUsername: PropTypes.func.isRequired,\n  resultsNumber: PropTypes.string.isRequired\n}\n\nexport default UserFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TableSessionList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      row: ''\n    }\n\n    this.mapResults = this.mapResults.bind(this);\n  }\n\n  mapResults(list) {\n    const { renderTime } = this.props;\n\n    const row = list.map((item, index) => {\n      return (\n        <tr className=\"table__tr\" key={index}>\n          <td className=\"table__td table__td--user\">{item.user__username}</td>\n          <td className=\"table__td table__td--times\">{renderTime(item.min_timestamp)}</td>\n          <td className=\"table__td table__td--sec\">{this.renderDuration(item.duration_sec)}</td>\n          <td className=\"table__td table__td-req\">{item.request_count}</td>\n        </tr>\n      );\n    });\n\n    return row;\n  }\n\n  renderDuration(duration) {\n    const seconds = parseInt(duration % 60);\n    const totalMins = parseInt(duration / 60);\n    const mins = parseInt(totalMins % 60);\n    const hours = parseInt(totalMins / 60);\n\n    let durationString;\n\n    if (hours !== 0) {\n      durationString = hours + 'h' + mins + 'm' + seconds + 's';\n    } else if (mins !== 0) {\n      durationString = mins + 'm' + seconds + 's';\n    } else {\n      durationString = seconds + 's';\n    }\n\n    return durationString;\n  }\n\n  render() {\n    const { sessionsList, orderResultsUsername, orderResultsTimeStarted, orderResultsDuration, orderResultsRequestCount } = this.props;\n\n    return (\n      <table className=\"table\" id=\"table\">\n        <thead className=\"table__thead\">\n          <tr className=\"table__tr-title\">\n            <th className=\"table__th table__th-col1\">\n              <div className=\"table__content table__content-col1\">\n                <p className=\"table__title\">Username</p>\n                <div className=\"table__icons\">\n                  <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsUsername}></i>\n                  <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsUsername}></i>\n                </div>\n              </div>\n            </th>\n            <th className=\"table__th table__th-col2\">\n              <div className=\"table__content table__content-col2\">\n                <p className=\"table__title\">Times Started (local TZ)</p>\n                <div className=\"table__icons\">\n                  <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsTimeStarted}></i>\n                  <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsTimeStarted}></i>\n                </div>\n              </div>\n            </th>\n            <th className=\"table__th table__th-col3\">\n              <div className=\"table__content table__content-col3\">\n                <p className=\"table__title\">Duration</p>\n                <div className=\"table__icons\">\n                  <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsDuration}></i>\n                  <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsDuration}></i>\n                </div>\n              </div>\n            </th>\n            <th className=\"table__th table__th-col4\">\n              <div className=\"table__content table__content-col4\">\n                <p className=\"table__title\">Request Count</p>\n                <div className=\"table__icons\">\n                  <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsRequestCount}></i>\n                  <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsRequestCount}></i>\n                </div>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"table__tbody\">\n          {this.mapResults(sessionsList)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTableSessionList.Proptypes = {\n  renderTime: PropTypes.func.isRequired,\n  sessionsList: PropTypes.array.isRequired,\n  orderResultsUsername: PropTypes.func.isRequired,\n  orderResultsTimeStarted: PropTypes.func.isRequired,\n  orderResultsDuration: PropTypes.func.isRequired,\n  orderResultsRequestCount: PropTypes.func.isRequired\n}\n\nexport default TableSessionList;\n","import React, { Component, Fragment } from \"react\";\nimport TableSessionList from \"./TableSessionList\";\nimport PropTypes from \"prop-types\";\n\nclass Pagination extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      currentPage: 1,\n      pageCount: 1,\n      pageSize: 5,\n      controls: [],\n      matrixControls: [[]]\n    }\n\n    this.handleSelect = this.handleSelect.bind(this);\n    this.createButtons = this.createButtons.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n    this.setCurrentPage = this.setCurrentPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getButtons();\n  }\n\n  createButtons(matrixControls, page) {\n    const baseClassName = \"footer__button-page\";\n\n    const arrayPage = matrixControls.filter(arr => arr.indexOf(page) !== -1)[0]\n\n    let arrayBtns;\n\n    if (arrayPage) {\n      arrayBtns = arrayPage\n        .map(item => {\n          return (\n            <li className={`${baseClassName} ${baseClassName} ${this.state.currentPage === item ? `${baseClassName}--active` : ''}`} onClick={() => { this.setCurrentPage(item) }} key={item}>{item}</li>\n          )\n        });\n    }\n\n    return arrayBtns;\n\n  }\n\n  getButtons() {\n    const startingPage = 1;\n    const { sessionsList } = this.props;\n    const pageSize = this.state.pageSize;\n\n    let pageCount = parseInt(sessionsList.length / pageSize);\n\n    if (sessionsList.length % pageSize > 0) {\n      pageCount++;\n    }\n\n    this.setState({\n      currentPage: startingPage,\n      pageCount: pageCount\n    });\n\n    this.createControls(pageCount);\n  }\n\n  createControls(pageCount) {\n    let controls = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      controls.push(i);\n    }\n\n    this.setCurrentPage(1);\n\n    let matrixControls = [];\n\n    const shownPageButtons = 4;\n\n    for (let i = 0; i <= controls.length; i += shownPageButtons) {\n      matrixControls.push(controls.slice(i, i + shownPageButtons));\n    }\n\n    this.setState({\n      controls: controls,\n      matrixControls: matrixControls\n    });\n  }\n\n  handleSelect(e) {\n    const option = e.currentTarget.value;\n    this.setState({\n      pageSize: parseInt(option)\n    }, () => this.getButtons());\n\n    this.createControls();\n  }\n\n  setCurrentPage(num) {\n    const { sessionsList } = this.props;\n    const pageSize = this.state.pageSize;\n    const currentPage = num;\n    const upperLimit = currentPage * pageSize;\n    const dataSlice = sessionsList.slice((upperLimit - pageSize), upperLimit);\n\n    this.setState({\n      dataSlice: dataSlice,\n      currentPage: num\n    });\n  }\n\n  render() {\n    const { controls, matrixControls, dataSlice, currentPage } = this.state;\n\n    const baseClassName = \"footer__button-page\";\n\n    const arIni = [\n      (<li className={`${baseClassName}`} key=\"First\" onClick={() => { this.setCurrentPage(1) }}>First</li>),\n      (<li className={`${baseClassName}`} key=\"Previous\" onClick={() => { (this.state.currentPage === 1) ? this.setCurrentPage(1) : this.setCurrentPage(this.state.currentPage - 1) }}>Previous</li>)\n    ];\n\n    const arEnd = [\n      (<div className={`${baseClassName}`} key=\"Next\" onClick={() => { (this.state.currentPage === (controls.length)) ? this.setCurrentPage(controls.length) : this.setCurrentPage(this.state.currentPage + 1) }}>Next</div>),\n      (<div className={`${baseClassName}`} key=\"Last\" onClick={() => { this.setCurrentPage(controls.length) }}>Last</div>)\n    ];\n\n    return (\n      <Fragment>\n        <footer className=\"app__footer\">\n\t\t\t\t\t<div className=\"footer__select-page\">\n\t\t\t\t\t\t<p>Show\n\t\t\t\t\t\t\t<select onChange={this.handleSelect} className=\"select__content-page\">\n\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\n\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t\t\t\t<option value=\"20\">20</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\tentries per page\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"footer__button\">\n\t\t\t\t\t\t{arIni}\n\t\t\t\t\t\t{this.createButtons(matrixControls, currentPage)}\n\t\t\t\t\t\t{arEnd}\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n          <div className='pagination-results'>\n            {(dataSlice) ?\n              <TableSessionList\n                sessionsList={dataSlice}\n                renderTime={this.props.renderTime}\n                orderResultsUsername={this.props.orderResultsUsername}\n                orderResultsTimeStarted={this.props.orderResultsTimeStarted}\n                orderResultsDuration={this.props.orderResultsDuration}\n                orderResultsRequestCount={this.props.orderResultsRequestCount}\n              /> : 'no results'}\n          </div>\n      </Fragment>\n    );\n  }\n}\n\nPagination.Proptypes = {\n  sessionsList: PropTypes.array.isRequired,\n  children: PropTypes.element.isRequired,\n  renderTime: PropTypes.func.isRequired,\n  orderResultsUsername: PropTypes.func.isRequired,\n  orderResultsTimeStarted: PropTypes.func.isRequired,\n  orderResultsDuration: PropTypes.func.isRequired,\n  orderResultsRequestCount: PropTypes.func.isRequired\n}\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport UserFilter from './UserFilter';\nimport Pagination from \"./Pagination\";\nimport { requestSessions } from '../../services/SessionsService';\n\nclass SessionList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: [],\n      activePetition: false,\n      queryUsername: '',\n      sessionsList: [],\n      duplicatedArray: false,\n      filter: '',\n      resultsNumber: '0'\n    }\n\n    this.renderTime = this.renderTime.bind(this);\n    this.getQueryUsername = this.getQueryUsername.bind(this);\n\n    this.orderResultsUsername = this.orderResultsUsername.bind(this);\n    this.orderResultsTimeStarted = this.orderResultsTimeStarted.bind(this);\n    this.orderResultsDuration = this.orderResultsDuration.bind(this);\n    this.orderResultsRequestCount = this.orderResultsRequestCount.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchSessions();\n  }\n\n  fetchSessions() {\n    requestSessions()\n      .then(data => {\n        this.setState({\n          userData: data,\n          sessionsList: data.sessions,\n          duplicatedArray: true,\n          resultsDate: \"\",\n          resultsNumber: \"\"\n        });\n\n        this.calculateResultsNumber(this.state.sessionsList);\n        this.calculateFromToDate(this.state.userData);\n      });\n  }\n\n  calculateFromToDate() {\n    const fromDateToDate = this.renderTime(this.state.userData.from_date) + ' and ' + this.renderTime(this.state.userData.to_date);\n\n    this.setState({\n      resultsDate: fromDateToDate\n    });\n  }\n\n  calculateResultsNumber(list) {\n    const resultsNumber = parseInt(list.length) + '/' + parseInt(this.state.userData.sessions.length);\n\n    this.setState({\n      resultsNumber: resultsNumber\n    });\n  }\n\n  addZero(par) {\n    if (par.length < 2) {\n      par = '0' + par;\n    }\n\n    return par;\n  }\n\n  renderTime(timestamp) {\n    const sessionStart = new Date(timestamp);\n\n    const year = sessionStart.getFullYear();\n    const month = this.addZero((sessionStart.getMonth() + 1).toString());\n    const day = this.addZero(sessionStart.getDate().toString());\n    const hour = this.addZero(sessionStart.getHours().toString());\n    const minutes = this.addZero(sessionStart.getMinutes().toString());\n\n    return (\n      year + '-' + month + '-' + day + ',' + hour + ':' + minutes\n    );\n  }\n\n  filterUserame(userName) {\n    const originalList = this.state.userData.sessions;\n\n    const filteredList = originalList.filter(item => {\n      return item.user__username.includes(userName);\n    });\n\n    return filteredList;\n  }\n\n  getQueryUsername(e) {\n    const userName = e.currentTarget.value;\n    const filteredList = this.filterUserame(userName);\n    let orderedList = '';\n\n    switch (this.state.filter) {\n      case 'Username-up':\n        orderedList = this.orderUsername(filteredList);\n        break;\n\n      case 'Username-down':\n        orderedList = this.orderUsername(filteredList).reverse();\n        break;\n\n      case 'TimeStarted-up':\n        orderedList = this.orderTimeStarted(filteredList);\n        break;\n\n      case 'TimeStarted-down':\n        orderedList = this.orderTimeStarted(filteredList).reverse();\n        break;\n\n      case 'Duration-up':\n        orderedList = this.orderDuration(filteredList);\n        break;\n\n      case 'Duration-down':\n        orderedList = this.orderDuration(filteredList).reverse();\n        break;\n\n      case 'RequestCount-up':\n        orderedList = this.orderRequestCount(filteredList);\n        break;\n\n      case 'RequestCount-down':\n        orderedList = this.orderRequestCount(filteredList).reverse();\n        break;\n\n      default:\n        orderedList = filteredList;\n        break;\n    };\n\n    this.calculateResultsNumber(orderedList);\n\n    this.setState({\n      queryUsername: userName,\n      sessionsList: orderedList\n    }, () => this.refs.child.getButtons());\n  }\n\n  orderUsername(list) {\n    const sortedList = list.sort(\n      function (a, b) {\n        const nameA = a.user__username.toUpperCase();\n        const nameB = b.user__username.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        } else if (nameA > nameB) {\n          return 1;\n\n        } else {\n          return 0;\n        }\n      });\n\n    return sortedList;\n  }\n\n  orderResultsUsername(e) {\n    const sortedList = this.orderUsername(this.state.sessionsList);\n\n    if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n      this.setState({\n        sessionsList: sortedList.reverse(),\n        filter: 'Username-down'\n      }, () => this.refs.child.getButtons());\n\n    } else {\n      this.setState({\n        sessionsList: sortedList,\n        filter: 'Username-up'\n      }, () => this.refs.child.getButtons());\n    }\n  }\n\n  orderTimeStarted(list) {\n    const sortedList = list.sort((a, b) => {\n      const timeA = new Date(a.min_timestamp);\n      const timeB = new Date(b.min_timestamp);\n      return (timeA - timeB);\n    });\n\n    return sortedList;\n  }\n\n  orderResultsTimeStarted(e) {\n    const sortedList = this.orderTimeStarted(this.state.sessionsList);\n\n    if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n      this.setState({\n        sessionsList: sortedList.reverse(),\n        filter: 'TimeStarted-down'\n      }, () => this.refs.child.getButtons());\n\n    } else {\n      this.setState({\n        sessionsList: sortedList,\n        filter: 'TimeStarted-up'\n      }, () => this.refs.child.getButtons());\n    }\n  }\n\n  orderDuration(list) {\n    const sortedList = list.sort((a, b) => {\n      return a.duration_sec - b.duration_sec;\n    });\n\n    return sortedList;\n  }\n\n  orderResultsDuration(e) {\n    const sortedList = this.orderDuration(this.state.sessionsList);\n\n    if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n      this.setState({\n        sessionsList: sortedList.reverse(),\n        filter: 'Duration-down'\n      }, () => this.refs.child.getButtons());\n\n    } else {\n      this.setState({\n        sessionsList: sortedList,\n        filter: 'Duration-up'\n      }, () => this.refs.child.getButtons());\n    }\n  }\n\n  orderRequestCount(list) {\n    const sortedList = list.sort((a, b) => {\n      return a.request_count - b.request_count;\n    });\n\n    return sortedList;\n  }\n\n  orderResultsRequestCount(e) {\n    const sortedList = this.orderRequestCount(this.state.sessionsList);\n\n    if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n      this.setState({\n        sessionsList: sortedList.reverse(),\n        filter: 'RequestCount-down'\n      }, () => this.refs.child.getButtons());\n\n    } else {\n      this.setState({\n        sessionsList: sortedList,\n        filter: 'RequestCount-up'\n      }, () => this.refs.child.getButtons());\n    }\n  }\n\n  render() {\n    const { sessionsList, duplicatedArray, resultsDate, resultsNumber } = this.state;\n\n    return (\n      <div className={`app__container  ${this.props.hiddenButton}`}>\n        <main className=\"app__main\">\n          <div className=\"breadcrumb__container\">\n            <ul className=\"breadcrumb__container-list\">\n              <li className=\"breadcrumb__container-item\">\n                <Link to=\"/\" className=\"breadcrumb__link\">Overview</Link>\n              </li>  >\n              <li className=\"breadcrumb__container-item\">\n                <span>Sessions</span>\n              </li>\n            </ul>\n          </div>\n          <div className=\"panel__session\">\n            <i className=\"zmdi zmdi-apps\"></i>\n            <h2 className=\"panel__session-title\">Sessions between {resultsDate}</h2>\n          </div>\n          <UserFilter getQueryUsername={this.getQueryUsername} resultsNumber={resultsNumber} />\n          <div className=\"table__container-session\">\n            {(duplicatedArray === true)\n              ? (\n                <Pagination ref=\"child\"\n                  renderTime={this.renderTime}\n                  orderResultsUsername={this.orderResultsUsername}\n                  orderResultsTimeStarted={this.orderResultsTimeStarted}\n                  orderResultsDuration={this.orderResultsDuration}\n                  orderResultsRequestCount={this.orderResultsRequestCount}\n                  sessionsList={sessionsList} >\n                </Pagination>\n              ) : (<p>Looking for data...</p>)}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default SessionList;\n","const ENDPOINT = 'http://adalab.stylesage.co/api/v1/sessions/';\n\nconst requestSessions = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { requestSessions };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TableCharts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      table: []\n    }\n  }\n\n  chartNames() {\n    const { chartList } = this.props;\n\n    const matrix = chartList.reduce((acc, item) => {\n      const matrixIndex = acc.findIndex(chart => chart[0] === item.details.chart_name);\n\n      if (matrixIndex === -1) {\n\n        const accMatrix = [];\n\n        accMatrix.push(item.details.chart_name);\n        accMatrix.push(1);\n        accMatrix.push([item.request.user__username]);\n\n        acc.push(accMatrix);\n\n      } else {\n\n        acc[matrixIndex][1] += 1;\n\n        if (acc[matrixIndex][2].indexOf(item.request.user__username) === -1) {\n          acc[matrixIndex][2].push(item.request.user__username);\n        }\n      }\n\n      return acc;\n    }, [[]]);\n\n    const table = matrix.splice(1);\n\n    return table;\n  }\n  visibility() {\n    const { hiddenButton } = this.props;\n\n  const displace = (hiddenButton === true) ? '' : 'displace';\n  return displace;\n  }\n\n  render() {\n    const { chartList } = this.props;\n\n    const matrix = this.chartNames();\n\n    let table;\n\n    if (matrix.length !== 0) {\n      table = matrix\n        .sort(function (a, b) {\n\n          return b[1] - a[1];\n        })\n        .map((row, index) => {\n          return (\n            <tr className=\"table__tr\" key={index}>\n              <td className=\"table__td\">{row[0]}</td>\n              <td className=\"table__td\">{row[1]}</td>\n              <td className=\"table__td\">{(row[1] / chartList.length * 100).toFixed(1)}%\n                <div className=\"table__bar-container\">\n                    <div className=\"table__bar\" style={{width: `${(row[1] / chartList.length * 100).toFixed(1)}%`}}></div>\n                </div>\n              </td>\n              <td className=\"table__td\">{row[2].length}</td>\n            </tr>\n          )\n        });\n    };\n\n    return (\n      <table className=\"table\" id=\"table\">\n        <thead className=\"table__thead\">\n          <tr className=\"table__tr-title \">\n            <th className=\"table__th \">\n              <div className=\"table__content table__content-col2\">\n                <p className=\"table__title\">Chart</p>\n              </div>\n            </th>\n            <th className=\"table__th small-col\">\n              <div className=\"table__content small-col\">\n                <p className=\"table__title\">Times Used</p>\n              </div>\n            </th>\n            <th className=\"table__th\">\n              <div className=\"table__content small-col\">\n                <p className=\"table__title\">%</p>\n              </div>\n            </th>\n            <th className=\"table__th\">\n              <div className=\"table__content small-col\">\n                <p className=\"table__title\">Users</p>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"table__tbody\">\n          {table}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTableCharts.propTypes = {\n  chartList: PropTypes.array.isRequired\n}\n\nexport default TableCharts;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { requestCharts } from './../../services/ChartsService';\nimport { requestGroups } from './../../services/GroupsService';\nimport TableCharts from './TableCharts';\n\nclass ChartsUsage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: [],\n      chartList: [],\n      allGroupsList: [],\n      groupsList: [],\n      filterOptionsChecked: false,\n      timelapse: 7,\n      display: 'hidden',\n      fromDate: new Date(),\n      toDate: new Date(),\n    }\n\n    this.handleOptions = this.handleOptions.bind(this);\n\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleDateFrom = this.handleDateFrom.bind(this);\n    this.handleDateTo = this.handleDateTo.bind(this);\n    this.visibilitySetDate = this.visibilitySetDate.bind(this);\n\n    this.handleUserGroups = this.handleUserGroups.bind(this);\n    this.selectAllGroups = this.selectAllGroups.bind(this);\n    this.clearAllGroups = this.clearAllGroups.bind(this);\n\n    this.filterAll = this.filterAll.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGroups();\n    this.renderUserGroups(true);\n    this.fetchCharts(this.state.timelapse);\n  }\n\n  getGroups(groups) {\n    const groupsList = groups.map(item => {\n      return item.name;\n    });\n\n    return groupsList;\n  }\n\n  renderUserGroups(check) {\n    this.setState((prevState) => {\n\n      const sortedSet = prevState.allGroupsList;\n\n      const userGroupsInputs = sortedSet.map((item, index) => {\n        return (\n          <li key={index}>\n            <label htmlFor={item}>\n              <input onChange={this.handleUserGroups} id={item} type=\"checkbox\" value={item} name={item} defaultChecked={check} />\n              {item}\n            </label>\n          </li>\n        );\n      });\n\n      return { userGroupsInputs: userGroupsInputs };\n    });\n  }\n\n  fetchGroups() {\n    requestGroups()\n      .then(data => {\n        const groupData = this.getGroups(data.groups);\n        const allGroups = groupData.slice();\n\n        this.setState({\n          allGroupsList: allGroups,\n          groupsList: groupData\n        }, () => this.renderUserGroups(true));\n      });\n  }\n\n  fetchCharts(timelapse) {\n    let toDate = new Date();\n    let fromDate = new Date().setDate(toDate.getDate() - timelapse);\n\n    fromDate = new Date(fromDate).toISOString();\n    toDate = new Date(toDate).toISOString();\n\n    requestCharts(fromDate, toDate)\n      .then(data => {\n        this.setState({\n          chartList: data.open_chart_events,\n          userData: data\n        });\n\n        this.filterAll();\n      });\n  }\n\n  handleOptions(e) {\n    const optionsTarget = e.currentTarget.checked;\n\n    this.setState({\n      filterOptionsChecked: optionsTarget\n    }, () => this.filterAll());\n  }\n\n  handleDateTo(e) {\n    e.persist();\n    this.setState({\n      toDate: e.currentTarget.value\n    }, () => this.handleChangeDate(e));\n  }\n\n  handleDateFrom(e) {\n    e.persist();\n    this.setState({\n      fromDate: e.currentTarget.value\n    }, () => this.handleChangeDate(e));\n  }\n\n  handleChangeDate(e) {\n    let ct = new Date();\n    let fd = new Date();\n    let period;\n\n    if (e.currentTarget) {\n      period = e.currentTarget.value;\n    }\n\n    switch (period) {\n      case 'last-week':\n        fd.setDate(fd.getDate() - 7);\n        break;\n\n      case 'last-month':\n        fd.setMonth(fd.getMonth() - 1);\n        break;\n\n      case 'last-two-months':\n        fd.setMonth(fd.getMonth() - 2);\n        break;\n\n      case 'always':\n        fd = new Date(2015, 0, 1, 0, 0);\n        break;\n\n      default:\n        ct = new Date(this.state.toDate);\n        fd = new Date(this.state.fromDate);\n        break;\n    }\n\n    const timelapse = Math.round((ct - fd) / (1000 * 60 * 60 * 24));\n\n    this.setState({\n      timelapse: timelapse\n    });\n\n    this.fetchCharts(timelapse);\n  }\n\n  handleUserGroups(e) {\n    const userGroupsTarget = e.currentTarget.value;\n\n    this.setState((prevState) => {\n      const { groupsList } = prevState;\n\n      if (groupsList.indexOf(userGroupsTarget) === -1) {\n        groupsList.push(userGroupsTarget);\n\n      } else {\n        groupsList.splice(groupsList.indexOf(userGroupsTarget), 1);\n      }\n\n      return { groupsList: groupsList }\n    }, () => this.filterAll());\n  }\n\n  filterAll() {\n    const originalCharts = this.state.userData.open_chart_events;\n    const supportChecked = this.state.filterOptionsChecked;\n\n    const removedSupport = originalCharts.filter(item => {\n      if (supportChecked) {\n        return !item.request.user__username.includes('stylesage');\n\n      } else {\n        return item;\n      }\n    });\n\n    const removedGroups = removedSupport.filter(chart => {\n      const isGroupPresent = this.state.groupsList.map(group => {\n        if (chart.request.user__group__name === group) {\n          return true;\n\n        } else {\n          return false;\n        }\n      });\n\n      let isPresent = false;\n\n      for (let ii = 0; ii < isGroupPresent.length; ii++) {\n        if (isGroupPresent[ii] === true) {\n          isPresent = true;\n        }\n      }\n\n      return isPresent;\n    });\n\n    this.setState({\n      chartList: removedGroups\n    });\n  }\n\n  visibilitySetDate(e) {\n    const hiddenClassSetDate = (this.state.display === 'hidden' && e.currentTarget.value === 'set-date') ? '' : 'hidden';\n\n    this.setState({\n      display: hiddenClassSetDate\n    });\n  }\n\n  selectAllGroups() {\n    this.setState((prevState) => {\n      const groups = prevState.allGroupsList.slice();\n\n      return {\n        userGroupsInputs: '',\n        groupsList: groups\n      }\n    }, () => {\n      this.renderUserGroups(true);\n      this.filterAll();\n    });\n  }\n\n  clearAllGroups() {\n    const groups = [];\n\n    this.setState({\n      userGroupsInputs: '',\n      groupsList: groups\n    }, () => {\n      this.renderUserGroups(false);\n      this.filterAll();\n    });\n  }\n\n  render() {\n    const { chartList, display } = this.state;\n    const userGroupsInputs = this.state.userGroupsInputs;\n\n    return (\n      <div className={`app__container  ${this.props.hiddenButton}`}>\n        <main className=\"app__main\">\n          <div className=\"breadcrumb__container\">\n            <ul className=\"breadcrumb__container-list\">\n              <li className=\"breadcrumb__container-item\">\n                <Link to=\"/\" className=\"breadcrumb__link\">Overview</Link>\n              </li>  >\n              <li className=\"breadcrumb__container-item\">\n                <span>ChartsUsage</span>\n              </li>\n            </ul>\n          </div>\n          <div className=\"charts__container\">\n            <div className=\"table__container\">\n              <TableCharts chartList={chartList} />\n            </div>\n            <div className=\"chart__filters\">\n              <div className=\"chart__filter chart__filter-options\">\n                <div className=\"chart__filter-header\">\n                  <i className=\"zmdi zmdi-account-add\"></i>\n                  <h3 className=\"chart__filter-title\">OPTIONS</h3>\n                </div>\n                <div className=\"chart__filter-content\">\n                  <label>\n                    <input type=\"checkbox\" onClick={this.handleOptions} defaultChecked={false} /> exclude support users (x@stylesage.com)\n                  </label>\n                </div>\n              </div>\n              <div className=\"chart__filter chart__filter-range\">\n                <div className=\"chart__filter-header\">\n                  <i className=\"zmdi zmdi-calendar-check\"></i>\n                  <h3 className=\"chart__filter-title\">DATE RANGE</h3>\n                </div>\n                <div className=\"chart__filter-content\">\n                  <div>\n                    <label htmlFor=\"last-week\" >\n                      <input defaultChecked={true} onClick={this.visibilitySetDate} onChange={this.handleChangeDate} type=\"radio\" id=\"last-week\" name=\"date\" value=\"last-week\" className=\"input__type-radio\" />\n                      <span></span>last week\n                    </label>\n                  </div>\n                  <div >\n                    <label htmlFor=\"last-month\">\n                      <input onClick={this.visibilitySetDate} onChange={this.handleChangeDate} type=\"radio\" id=\"last-month\" name=\"date\" value=\"last-month\" className=\"input__type-radio\" />\n                      <span></span>last month\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"last-two-months\">\n                      <input onClick={this.visibilitySetDate} onChange={this.handleChangeDate} type=\"radio\" id=\"last-two-months\" name=\"date\" value=\"last-two-months\" className=\"input__type-radio\" />\n                      <span></span>last 2 months\n                    </label>\n                  </div>\n                  <div>\n                    <label htmlFor=\"set-date\">\n                      <input onClick={this.visibilitySetDate} type=\"radio\" id=\"set-date\" name=\"date\" value=\"set-date\" className=\"input__type-radio\" />\n                      <span></span>set date\n                    </label>\n                  </div>\n                  <div className={`contentSetDate ${display}`}>\n                    <div>\n                      <label htmlFor=\"from-date\">\n                        <input onChange={this.handleDateFrom} id=\"from-date\" type=\"date\" name=\"date??\" />\n                        from date\n                    </label>\n                    </div>\n                    <div>\n                      <label htmlFor=\"to-date\">\n                        <input onChange={this.handleDateTo} id=\"to-date\" type=\"date\" name=\"date??\" />\n                        to date\n                    </label>\n                    </div>\n                  </div>\n                  <div>\n                    <label htmlFor=\"always\">\n                      <input onClick={this.visibilitySetDate} onChange={this.handleChangeDate} type=\"radio\" id=\"always\" name=\"date\" value=\"always\" className=\"input__type-radio\" />\n                      <span></span>always\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"chart__filter chart__filter-groups\">\n                <div className=\"chart__filter-header\">\n                  <i className=\"zmdi zmdi-accounts\"></i>\n                  <h3 className=\"chart__filter-title\">USER GROUPS</h3>\n                </div>\n                <div className=\"chart__filter-content\">\n                  <div className=\"chart__filter-select\">\n                    <button type=\"button\" className=\"btn-select\" onClick={this.selectAllGroups} data-select=\"select all\">select all</button>\n                    <button type=\"button\" className=\"btn-select\" onClick={this.clearAllGroups} data-select=\"clear all\">clear all</button>\n                  </div>\n                  <ul className=\"chart__filter-listgroups\">\n                    {userGroupsInputs}\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  };\n};\n\nexport default ChartsUsage;\n","const ENDPOINT = 'http://adalab.stylesage.co/api/v1/users_by_group/';\n\nconst requestGroups = ()=> fetch(ENDPOINT).then(response => response.json());\n\nexport { requestGroups };\n","const ENDPOINT = 'http://adalab.stylesage.co/api/v1/charts/';\n\nconst requestCharts = (startDate, endDate) => fetch(`${ENDPOINT}?from_date=${startDate}&to_date=${endDate}`).then(response => response.json());\n\nexport { requestCharts };\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Overview from './components/component-overview/Overview';\nimport SessionList from './components/component-list/SessionList';\nimport ChartsUsage from './components/component-charts/ChartsUsage';\nimport './styles.scss';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenButton: ''\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const hiddenStatus = (this.state.hiddenButton === 'displace') ? '' : 'displace';\n\n    this.setState({\n      hiddenButton: hiddenStatus\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header onClick={this.handleClick} />\n        <div className=\"page__wrapper\">\n          <Sidebar hiddenButton={this.state.hiddenButton === 'displace' ? false : true} />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Overview hiddenButton={this.state.hiddenButton} />} />\n            <Route path=\"/session-list\" render={() => <SessionList hiddenButton={this.state.hiddenButton} />} />\n            <Route path=\"/charts-usage\" render={() => <ChartsUsage hiddenButton={this.state.hiddenButton} />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}