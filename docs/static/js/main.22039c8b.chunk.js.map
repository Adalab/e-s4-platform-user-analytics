{"version":3,"sources":["components/Header.js","components/Sidebar.js","components/component-overview/Overview.js","components/component-list/UserFilter.js","components/component-list/TableSessionList.js","components/component-list/SessionList.js","services/SessionsService.js","components/component-charts/TableCharts.js","components/component-charts/ChartsUsage.js","services/ChartsService.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","className","type","onClick","this","props","Component","Sidebar","hiddenButton","concat","visibility","Link","to","Overview","UserFilter","_this$props","getQueryUsername","resultsNumber","htmlFor","id","placeholder","name","onKeyUp","TableSessionList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","row","mapResults","bind","assertThisInitialized","list","_this2","map","item","index","key","user__username","renderTime","min_timestamp","renderDuration","duration_sec","request_count","duration","seconds","parseInt","totalMins","mins","hours","sessionsList","orderResultsUsername","orderResultsTimeStarted","orderResultsDuration","orderResultsRequestCount","data-arrow","SessionList","userData","activePetition","queryUsername","duplicatedArray","filter","fetchSessions","fetch","then","response","json","data","setState","sessions","resultsDate","calculateResultsNumber","calculateFromToDate","fromDateToDate","from_date","to_date","length","par","timestamp","sessionStart","Date","getFullYear","addZero","getMonth","toString","getDate","getHours","getMinutes","userName","includes","e","currentTarget","value","filteredList","filterUserame","orderedList","orderUsername","reverse","orderTimeStarted","orderDuration","orderRequestCount","sort","b","nameA","toUpperCase","nameB","sortedList","getAttribute","_this$state","component_list_UserFilter","component_list_TableSessionList","TableCharts","renderTimesUsed","renderTimesPercentage","renderChartUsers","chartNames","ChartsUsage","chartList","allGroupsList","groupsList","filterOptionsChecked","timelapse","fromDate","toDate","userGroupsInputs","filterOptions","handleOptions","handleChangeDate","handleDateFrom","handleDateTo","handleUserGroups","fetchCharts","par1","par2","setDate","toISOString","open_chart_events","renderChartList","renderUserGroups","mappedChartList","chart","details","chart_name","toConsumableArray","Set","givenChart","reduce","acc","timesUsed","toFixed","mappedUsersData","request","_this3","mappedGroups","user__group__name","usersSet","groupA","toLowerCase","groupB","onChange","defaultChecked","checked","originalCharts","removedStyleUser","optionsTarget","chartsToFilter","_this4","persist","_this5","period","ct","fd","setMonth","Math","round","userGroupsTarget","push","splice","filterUserGroups","filteredCharts","isGroupPresent","group","isPresent","ii","component_charts_TableCharts","App","handleClick","hiddenStatus","components_Header","components_Sidebar","Switch","Route","exact","path","render","component_overview_Overview","component_list_SessionList","component_charts_ChartsUsage","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.22039c8b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n    \n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"app__header\">\n                <div className=\"button__container\">\n                    <div className=\"div__btn btn\" type=\"button\" onClick={this.props.onClick}>\n                            <i className=\"zmdi zmdi-menu\"></i>\n                        </div>\n                </div>\n                <h1 className=\"app__header-title\"> <span className=\"span-style\">Style</span><span className=\"span-sage\">Sage</span></h1>\n                </header>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nclass Sidebar extends Component {\n\n    visibility() {\n        const hiddenClass = (this.props.hiddenButton === true) ? 'hidden' : 'NO-hidden';\n        return hiddenClass;\n    }\n    render() {\n        return (\n            <aside className={`app__aside ${this.visibility()}`}>\n             <div className=\"app__aside-header\">\n                <i className=\"zmdi zmdi-chart\"></i>\n                <p className=\"app__aside-title\">User analytics</p>\n            </div>\n            <ul className=\"aside__list\">\n                <li className=\"aside__item\">\n                    <Link to=\"/\" className=\"aside__item-link\">Overview</Link>\n                </li>\n                <li className=\"aside__item\">\n                    <Link to=\"/session-list\" className=\"aside__item-link\">Session List</Link>\n                </li>\n                <li className=\"aside__item\">\n                    <Link to=\"/charts-usage\" className=\"aside__item-link\">Charts Usage</Link>\n                </li>\n            </ul>\n            </aside>\n        );\n    }\n}\n\nexport default Sidebar;","import React, {Component} from \"react\";\n\nclass Overview extends Component {\n  render() {\n    return (\n        <h2>Overview in progress...</h2>\n    );\n  }\n}\n\nexport default Overview;","import React, { Component } from \"react\";\n\nclass UserFilter extends Component {\n    render() {\n        const { getQueryUsername, resultsNumber } = this.props;\n\n        return (\n            <div className=\"search__container\">\n                <div className=\"search__input-container\">\n                    <label htmlFor=\"username\"></label>\n                    <span className=\"icon__search\"> <i className=\"zmdi zmdi-search\"></i> </span>\n                    <input type=\"text\" id=\"username\" className=\"search__input\" placeholder=\"search\" name=\"username\" onKeyUp={getQueryUsername} />\n                </div>\n                <p className=\"search__info-total\">Showing {resultsNumber} entries</p>\n            </div>\n        );\n    }\n}\n\nexport default UserFilter;","import React, { Component } from \"react\";\n\nclass TableSessionList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            row: ''\n        }\n\n        this.mapResults = this.mapResults.bind(this);\n    }\n\n    mapResults(list) {\n        const row = list.map((item, index) => {\n            return (\n                <tr className=\"table__tr\" key={index}>\n                    <td className=\"table__td table__td--user\">{item.user__username}</td>\n                    <td className=\"table__td table__td--times\">{this.props.renderTime(item.min_timestamp)}</td>\n                    <td className=\"table__td table__td--sec\">{this.renderDuration(item.duration_sec)}</td>\n                    <td className=\"table__td table__td-req\">{item.request_count}</td>\n                </tr>\n            );\n        });\n\n        return row;\n    }\n\n    renderDuration(duration) {\n        const seconds = parseInt(duration % 60);\n        const totalMins = parseInt(duration / 60);\n        const mins = parseInt(totalMins % 60);\n        const hours = parseInt(totalMins / 60);\n\n        let durationString;\n\n        if (hours !== 0) {\n            durationString = hours + 'h' + mins + 'm' + seconds + 's';\n        } else if (mins !== 0) {\n            durationString = mins + 'm' + seconds + 's';\n        } else {\n            durationString = seconds + 's';\n        }\n\n        return durationString;\n    }\n\n    render() {\n        const { sessionsList, orderResultsUsername, orderResultsTimeStarted, orderResultsDuration, orderResultsRequestCount } = this.props;\n\n        return (\n            <table className=\"table\" id=\"table\">\n                <thead className=\"table__thead\">\n                    <tr className=\"table__tr-title\">\n                        <th className=\"table__th\">\n                            <div className=\"table__content\">\n                                <p className=\"table__title\">Username</p>\n                                <div className=\"table__icons\">\n                                    <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsUsername}></i>\n                                    <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsUsername}></i>\n                                </div>\n                            </div>\n                        </th>\n                        <th className=\"table__th\">\n                            <div className=\"table__content\">\n                                <p className=\"table__title\">Times Started (local TZ)</p>\n                                <div className=\"table__icons\">\n                                    <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsTimeStarted}></i>\n                                    <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsTimeStarted}></i>\n                                </div>\n                            </div>\n                        </th>\n                        <th className=\"table__th\">\n                            <div className=\"table__content\">\n                                <p className=\"table__title\">Duration</p>\n                                <div className=\"table__icons\">\n                                    <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsDuration}></i>\n                                    <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsDuration}></i>\n                                </div>\n                            </div>\n                        </th>\n                        <th className=\"table__th\">\n                            <div className=\"table__content\">\n                                <p className=\"table__title\">Request Count</p>\n                                <div className=\"table__icons\">\n                                    <i className=\"zmdi zmdi-chevron-up\" data-arrow=\"up\" onClick={orderResultsRequestCount}></i>\n                                    <i className=\"zmdi zmdi-chevron-down\" data-arrow=\"down\" onClick={orderResultsRequestCount}></i>\n                                </div>\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody className=\"table__tbody\">\n                    {this.mapResults(sessionsList)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default TableSessionList;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport UserFilter from './UserFilter';\nimport TableSessionList from \"./TableSessionList\";\nimport { requestSessions } from '../../services/SessionsService';\n\nclass SessionList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: [],\n            activePetition: false,\n            queryUsername: '',\n            sessionsList: [],\n            duplicatedArray: false,\n            filter: '',\n            resultsNumber: '0'\n        }\n\n        this.renderTime = this.renderTime.bind(this);\n        this.getQueryUsername = this.getQueryUsername.bind(this);\n\n        this.orderResultsUsername = this.orderResultsUsername.bind(this);\n        this.orderResultsTimeStarted = this.orderResultsTimeStarted.bind(this);\n        this.orderResultsDuration = this.orderResultsDuration.bind(this);\n        this.orderResultsRequestCount = this.orderResultsRequestCount.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchSessions();\n    }\n\n    fetchSessions() {\n        requestSessions()\n            .then(data => {\n                this.setState({\n                    userData: data,\n                    sessionsList: data.sessions,\n                    duplicatedArray: true,\n                    resultsDate: \"\",\n                    resultsNumber: \"\"\n                });\n\n                this.calculateResultsNumber(this.state.sessionsList);\n                this.calculateFromToDate(this.state.userData);\n            });\n    }\n\n    calculateFromToDate() {\n        const fromDateToDate = this.renderTime(this.state.userData.from_date) + ' and ' + this.renderTime(this.state.userData.to_date);\n\n        this.setState({\n            resultsDate: fromDateToDate\n        });\n    }\n\n    calculateResultsNumber(list) {\n        const resultsNumber = parseInt(list.length) + '/' + parseInt(this.state.userData.sessions.length);\n\n        this.setState({\n            resultsNumber: resultsNumber\n        });\n    }\n\n    addZero(par) {\n        if (par.length < 2) {\n            par = '0' + par;\n        }\n\n        return par;\n    }\n\n    renderTime(timestamp) {\n        const sessionStart = new Date(timestamp);\n\n        const year = sessionStart.getFullYear();\n        const month = this.addZero((sessionStart.getMonth() + 1).toString());\n        const day = this.addZero(sessionStart.getDate().toString());\n        const hour = this.addZero(sessionStart.getHours().toString());\n        const minutes = this.addZero(sessionStart.getMinutes().toString());\n\n        return (\n            year + '-' + month + '-' + day + ',' + hour + ':' + minutes\n        );\n    }\n\n    filterUserame(userName) {\n        const originalList = this.state.userData.sessions;\n\n        const filteredList = originalList.filter(item => {\n            return item.user__username.includes(userName);\n        });\n\n        return filteredList;\n    }\n\n    getQueryUsername(e) {\n        const userName = e.currentTarget.value;\n        const filteredList = this.filterUserame(userName);\n        let orderedList = '';\n\n        switch (this.state.filter) {\n            case 'Username-up':\n                orderedList = this.orderUsername(filteredList);\n                break;\n\n            case 'Username-down':\n                orderedList = this.orderUsername(filteredList).reverse();\n                break;\n\n            case 'TimeStarted-up':\n                orderedList = this.orderTimeStarted(filteredList);\n                break;\n\n            case 'TimeStarted-down':\n                orderedList = this.orderTimeStarted(filteredList).reverse();\n                break;\n\n            case 'Duration-up':\n                orderedList = this.orderDuration(filteredList);\n                break;\n\n            case 'Duration-down':\n                orderedList = this.orderDuration(filteredList).reverse();\n                break;\n\n            case 'RequestCount-up':\n                orderedList = this.orderRequestCount(filteredList);\n                break;\n\n            case 'RequestCount-down':\n                orderedList = this.orderRequestCount(filteredList).reverse();\n                break;\n\n            default:\n                orderedList = filteredList;\n                break;\n        };\n\n        this.calculateResultsNumber(orderedList);\n        this.setState({\n            queryUsername: userName,\n            sessionsList: orderedList\n        })\n    }\n\n    orderUsername(list) {\n        const sortedList = list.sort(\n            function (a, b) {\n                const nameA = a.user__username.toUpperCase();\n                const nameB = b.user__username.toUpperCase();\n\n                if (nameA < nameB) {\n                    return -1;\n\n                } else if (nameA > nameB) {\n                    return 1;\n\n                } else {\n                    return 0;\n                }\n            });\n\n        return sortedList;\n    }\n\n    orderResultsUsername(e) {\n        const sortedList = this.orderUsername(this.state.sessionsList);\n\n        if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n            this.setState({\n                sessionsList: sortedList.reverse(),\n                filter: 'Username-down'\n            });\n\n        } else {\n            this.setState({\n                sessionsList: sortedList,\n                filter: 'Username-up'\n            });\n        }\n    }\n\n    orderTimeStarted(list) {\n        const sortedList = list.sort((a, b) => {\n            const timeA = new Date(a.min_timestamp);\n            const timeB = new Date(b.min_timestamp);\n            return (timeA - timeB);\n        });\n\n        return sortedList;\n    }\n\n    orderResultsTimeStarted(e) {\n        const sortedList = this.orderTimeStarted(this.state.sessionsList);\n\n        if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n            this.setState({\n                sessionsList: sortedList.reverse(),\n                filter: 'TimeStarted-down'\n            });\n\n        } else {\n            this.setState({\n                sessionsList: sortedList,\n                filter: 'TimeStarted-up'\n            });\n        }\n    }\n\n    orderDuration(list) {\n        const sortedList = list.sort((a, b) => {\n            return a.duration_sec - b.duration_sec;\n        });\n\n        return sortedList;\n    }\n\n    orderResultsDuration(e) {\n        const sortedList = this.orderDuration(this.state.sessionsList);\n\n        if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n            this.setState({\n                sessionsList: sortedList.reverse(),\n                filter: 'Duration-down'\n            });\n\n        } else {\n            this.setState({\n                sessionsList: sortedList,\n                filter: 'Duration-up'\n            });\n        }\n    }\n\n    orderRequestCount(list) {\n        const sortedList = list.sort((a, b) => {\n            return a.request_count - b.request_count;\n        });\n\n        return sortedList;\n    }\n\n    orderResultsRequestCount(e) {\n        const sortedList = this.orderRequestCount(this.state.sessionsList);\n\n        if (e.currentTarget.getAttribute('data-arrow') === 'down') {\n            this.setState({\n                sessionsList: sortedList.reverse(),\n                filter: 'RequestCount-down'\n            });\n\n        } else {\n            this.setState({\n                sessionsList: sortedList,\n                filter: 'RequestCount-up'\n            });\n        }\n    }\n\n    render() {\n        const { sessionsList, duplicatedArray, resultsDate, resultsNumber } = this.state;\n\n        return (\n            <div className=\"app__container\">\n                <main className=\"app__main\">\n                    <div className=\"breadcrumb__container\">\n                        <ul className=\"breadcrumb__container-list\">\n                            <li className=\"breadcrumb__container-item\">\n                                <Link to=\"/\" className=\"breadcrumb__link\">Overview</Link>\n                            </li>>\n                            <li className=\"breadcrumb__container-item\">\n                                <span>Sessions</span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"panel__session\">\n                        <i className=\"zmdi zmdi-apps\"></i>  \n                        <h2 className=\"panel__session-title\">Sessions between {resultsDate}</h2>\n                    </div>\n                    <UserFilter getQueryUsername={this.getQueryUsername} resultsNumber={resultsNumber} />\n                    <div className=\"table__container\">\n                        {(duplicatedArray.length !== 0)\n                            ? (<TableSessionList\n                                renderTime={this.renderTime}\n                                orderResultsUsername={this.orderResultsUsername}\n                                orderResultsTimeStarted={this.orderResultsTimeStarted}\n                                orderResultsDuration={this.orderResultsDuration}\n                                orderResultsRequestCount={this.orderResultsRequestCount}\n                                sessionsList={sessionsList} />)\n                            : (<p>Looking for data...</p>)}\n                    </div>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default SessionList;","const ENDPOINT = 'http://adalab.stylesage.co/api/v1/sessions/';\n\nconst requestSessions = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { requestSessions };","import React, { Component } from \"react\";\n\nclass TableCharts extends Component {\n    \n    chartNames() {\n        const { renderTimesUsed, renderTimesPercentage, renderChartUsers } = this.props;\n\n        const row = this.props.chartNames.map((item,index) => {\n            return (\n                <tr className=\"table__tr\" key={index}>\n                    <td className=\"table__td\">{item}</td>\n                    <td className=\"table__td\">{renderTimesUsed(item)}</td>\n                    <td className=\"table__td\">{renderTimesPercentage(renderTimesUsed(item))}</td>\n                    <td className=\"table__td\">{renderChartUsers(item)}</td>\n                </tr>\n            );\n        });\n        return row;\n    }\n    \n    render() {\n        \n        return (\n            <table className=\"table\" id=\"table\">\n                <thead className=\"table__thead\">\n                    <tr className=\"table__tr-title\">\n                        <th className=\"table__th\">\n                            <p className=\"table__title\">Chart</p>\n                        </th>\n                        <th className=\"table__th\">\n                            <p className=\"table__title\">Times Used</p>\n                        </th>\n                        <th className=\"table__th\">\n                            <p className=\"table__title\">%</p>\n                        </th>\n                        <th className=\"table__th\">\n                            <p className=\"table__title\">Users</p>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody className=\"table__tbody\">\n                   {this.chartNames()}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default TableCharts;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { requestCharts } from './../../services/ChartsService';\nimport TableCharts from './TableCharts';\n\nclass ChartsUsage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: [],\n            chartList: [],\n            chartNames: [],\n            allGroupsList: [],\n            groupsList: [],\n            filterOptionsChecked: true,\n            timelapse: 7,\n            fromDate: new Date(),\n            toDate: new Date(),\n            userGroupsInputs: null\n        }\n\n        this.renderTimesUsed = this.renderTimesUsed.bind(this);\n        this.renderTimesPercentage = this.renderTimesPercentage.bind(this);\n        this.renderChartUsers = this.renderChartUsers.bind(this);\n\n        this.filterOptions = this.filterOptions.bind(this);\n        this.handleOptions = this.handleOptions.bind(this);\n\n        this.handleChangeDate = this.handleChangeDate.bind(this);\n        this.handleDateFrom = this.handleDateFrom.bind(this);\n        this.handleDateTo = this.handleDateTo.bind(this);\n\n        this.handleUserGroups = this.handleUserGroups.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchCharts(this.state.timelapse);\n    }\n\n    fetchCharts(timelapse) {\n        let toDate = new Date();\n        let fromDate = new Date().setDate(toDate.getDate() - timelapse);\n\n        fromDate = new Date(fromDate).toISOString();\n        toDate = new Date(toDate).toISOString();\n\n        requestCharts(fromDate, toDate)\n            .then(data => {\n                this.setState({\n                    chartList: data.open_chart_events,\n                    userData: data\n                });\n\n                this.filterOptions(this.state.filterOptionsChecked, data.open_chart_events);\n                this.renderChartList(data.open_chart_events);\n                this.renderUserGroups(data.open_chart_events);\n            });\n    }\n\n    renderChartList(chartList) {\n        const mappedChartList = chartList\n            .map(chart => {\n            return chart.details.chart_name;\n            })\n            .sort((a, b) => {\n\n                if (a > b) {\n                    return 1;\n                } else if (a < b) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n        this.setState({\n            chartNames: [...new Set(mappedChartList)]\n        })\n    }\n\n    renderTimesUsed(givenChart) {\n        const reducedChartList = this.state.chartList.reduce((acc, item) => {\n            if (item.details.chart_name === givenChart) {\n                acc++;\n            }\n            return acc;\n        }, 0);\n\n        return reducedChartList;\n    }\n\n    renderTimesPercentage(timesUsed) {\n        const timesPercentage = (timesUsed / this.state.chartList.length * 100).toFixed(1);\n        return timesPercentage;\n    }\n\n    renderChartUsers(givenChart) {\n        const originalCharts = this.state.chartList;\n        const mappedUsersData = originalCharts\n            .filter(chart => chart.details.chart_name === givenChart)\n            .map(chart => {\n                return chart.request.user__username;\n            })\n\n        return [...new Set(mappedUsersData)].length;\n    }\n\n    renderUserGroups(chartList) {\n        const mappedGroups = chartList.map(item => item.request.user__group__name);\n        const usersSet = [...new Set(mappedGroups)];\n\n        const sortedSet = usersSet\n            .sort((a, b) => {\n                const groupA = a.toLowerCase();\n                const groupB = b.toLowerCase();\n\n                if (groupA > groupB) {\n                    return 1;\n                } else if (groupA < groupB) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n        const userGroupsInputs = sortedSet.map((item, index) => {\n            return (\n                <li key={index}>\n                    <label htmlFor={item}>\n                        <input onChange={this.handleUserGroups} id={item} type=\"checkbox\" value={item} name={item} defaultChecked={true} />\n                        {item}\n                    </label>\n                </li>\n            );\n        });\n\n        this.setState({\n            allGroupsList: usersSet,\n            groupsList: usersSet,\n            userGroupsInputs: userGroupsInputs\n        });\n    }\n\n    filterOptions(checked, originalCharts) {\n\n        const removedStyleUser = originalCharts.filter(item => {\n            if (checked) {\n                return !item.request.user__username.includes('stylesage');\n            } else {\n                return item;\n            }\n        });\n\n        this.setState({\n            chartList: removedStyleUser\n        });\n    }\n\n    handleOptions(e) {\n        const optionsTarget = e.currentTarget.checked;\n        const chartsToFilter = this.state.userData.open_chart_events;\n\n        this.setState({\n            filterOptionsChecked: optionsTarget\n        });\n\n        this.filterOptions(optionsTarget, chartsToFilter);\n    }\n\n    handleDateTo(e) {\n        e.persist();\n        this.setState({\n            toDate: e.currentTarget.value\n        }, () => this.handleChangeDate(e));\n    }\n\n    handleDateFrom(e) {\n        e.persist();\n        this.setState({\n            fromDate: e.currentTarget.value\n        }, () => this.handleChangeDate(e));\n    }\n\n    handleChangeDate(e) {\n        let ct = new Date();\n        let fd = new Date();\n        let period;\n\n        if (e.currentTarget) {\n            period = e.currentTarget.value;\n        }\n\n        switch (period) {\n            case 'last-week':\n                fd.setDate(fd.getDate() - 7);\n                break;\n\n            case 'last-month':\n                fd.setMonth(fd.getMonth() - 1);\n                break;\n\n            case 'last-two-months':\n                fd.setMonth(fd.getMonth() - 2);\n                break;\n\n            case 'always':\n                fd = new Date(2015, 0, 1, 0, 0);\n                break;\n\n            default:\n                ct = new Date(this.state.toDate);\n                fd = new Date(this.state.fromDate);\n                break;\n        }\n\n        const timelapse = Math.round((ct - fd) / (1000 * 60 * 60 * 24));\n\n        this.setState({\n            timelapse: timelapse\n        });\n\n        this.fetchCharts(timelapse);\n    }\n\n    handleUserGroups(e) {\n        const userGroupsTarget = e.currentTarget.value;\n\n        const groupsList = this.state.groupsList;\n\n        if (e.currentTarget.checked) {\n            groupsList.push(userGroupsTarget);\n\n        } else {\n            groupsList.splice(userGroupsTarget, 1);\n        }\n\n        this.setState({\n            groupsList: groupsList\n        });\n\n        this.filterUserGroups(groupsList);\n    }\n\n    filterUserGroups(groupsList) {\n        const originalCharts = this.state.userData.open_chart_events;\n\n        const filteredCharts = originalCharts.filter(chart => {\n            const isGroupPresent = groupsList.map(group => {\n                if (chart.request.user__group__name === group) {\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n\n            let isPresent = false;\n\n            for (let ii = 0; ii < isGroupPresent.length; ii++) {\n                if (isGroupPresent[ii] === true) {\n                    isPresent = true;\n                }\n            }\n\n            return isPresent;\n        });\n\n        this.setState({\n            chartList: filteredCharts\n        });\n\n        this.filterOptions(this.state.filterOptionsChecked, filteredCharts);\n    }\n\n    render() {\n        const { chartNames, userGroupsInputs } = this.state;\n\n        return (\n            <div className=\"app__container\">\n                <main className=\"app__main\">\n                    <div className=\"breadcrumb__container\">\n                        <ul className=\"breadcrumb__container-list\">\n                            <li className=\"breadcrumb__container-item\">\n                                <Link to=\"/\" className=\"breadcrumb__link\">Overview</Link>\n                            </li>>\n                            <li className=\"breadcrumb__container-item\">\n                                <span>ChartsUsage</span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"charts__container\">\n                        <div className=\"table__container\">\n                            <TableCharts chartNames={chartNames} renderTimesUsed={this.renderTimesUsed} renderTimesPercentage={this.renderTimesPercentage} renderChartUsers={this.renderChartUsers} />\n                        </div>\n                        <div className=\"chart__filters\">\n                            <div className=\"chart__filter chart__filter-options\">\n                                <div className=\"chart__filter-header\">\n                                    <i className=\"zmdi zmdi-account-add\"></i>\n                                    <h3 className=\"chart__filter-title\">OPTIONS</h3>\n                                </div>\n                                <div className=\"chart__filter-content\">\n                                    <label>\n                                        <input type=\"checkbox\" onClick={this.handleOptions} defaultChecked={false} /> exclude support users (x@stylesage.com)\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"chart__filter chart__filter-range\">\n                                <div className=\"chart__filter-header\">\n                                    <i className=\"zmdi zmdi-calendar-check\"></i>\n                                    <h3 className=\"chart__filter-title\">DATE RANGE</h3>\n                                </div>\n                                <div className=\"chart__filter-content\">\n                                    <p> From: | To:</p>\n                                    <div>\n                                        <label htmlFor=\"last-week\" >\n                                            <input defaultChecked={true} onClick={this.handleChangeDate} type=\"radio\" id=\"last-week\" name=\"date\" value=\"last-week\" className=\"input__type-radio\"/>\n                                            last week\n                                        </label>\n                                    </div>\n                                    <div >\n                                        <label htmlFor=\"last-month\">\n                                            <input onClick={this.handleChangeDate} type=\"radio\" id=\"last-month\" name=\"date\" value=\"last-month\" className=\"input__type-radio\"/>\n                                            last month\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"last-two-months\">\n                                            <input onClick={this.handleChangeDate} type=\"radio\" id=\"last-two-months\" name=\"date\" value=\"last-two-months\" className=\"input__type-radio\" />\n                                            last 2 months\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"last-two-months\">\n                                            <input onClick={this.handleChangeDate} type=\"radio\" id=\"set-date\" name=\"date\" value=\"set-date\" className=\"input__type-radio\" />\n                                            set date\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"from-date\">\n                                            <input onChange={this.handleDateFrom} id=\"from-date\" type=\"date\" name=\"date??\" />\n                                        from date\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"to-date\">\n                                            <input onChange={this.handleDateTo} id=\"to-date\" type=\"date\" name=\"date??\" />\n                                            to date\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"always\">\n                                            <input onClick={this.handleChangeDate} type=\"radio\" id=\"always\" name=\"date\" value=\"always\" className=\"input__type-radio\"/>\n                                            always\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"chart__filter chart__filter-groups\">\n                                <div className=\"chart__filter-header\">\n                                    <i className=\"zmdi zmdi-accounts\"></i>\n                                    <h3 className=\"chart__filter-title\">USER GROUPS</h3>\n                                </div>\n                                <div className=\"chart__filter-content\">\n                                    <p>select all | select active | clear all</p>\n                                    <ul className=\"chart__filter-listgroups\">\n                                        {(userGroupsInputs) ? userGroupsInputs : \"\"}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        );\n    };\n};\n\nexport default ChartsUsage;","//const ENDPOINT = 'http://adalab.stylesage.co/api/v1/charts/?from_date=2019-01-25T19:13:06.527Z&to_date=2019-02-01T19:13:06.527Z';\nconst ENDPOINT = 'http://adalab.stylesage.co/api/v1/charts/';\n\nconst requestCharts = (par1, par2) => fetch(`${ENDPOINT}?from_date=${par1}&to_date=${par2}`).then(response => response.json());\n\nexport { requestCharts };","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Overview from './components/component-overview/Overview';\nimport SessionList from './components/component-list/SessionList';\nimport ChartsUsage from './components/component-charts/ChartsUsage';\nimport './styles.scss';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hiddenButton: true\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  handleClick(){\n      const hiddenStatus = (this.state.hiddenButton === true)? false : true;\n          this.setState({\n              hiddenButton: hiddenStatus \n      });\n  } \n  \n  render() {\n    return (\n      <div className=\"app\">\n        <Header onClick={this.handleClick} />\n        <div className=\"page__wrapper\">\n          <Sidebar hiddenButton={this.state.hiddenButton} />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Overview />} />\n            <Route path=\"/session-list\" render={() => <SessionList />} />\n            <Route path=\"/charts-usage\" render={() => <ChartsUsage />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n    , document.getElementById('root'));"],"sourceRoot":""}